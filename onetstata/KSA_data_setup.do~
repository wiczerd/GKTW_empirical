/* Setup O*NET data for use with ASVAB tests
*
*  au : David Wiczer
*  mdy: 12-29-10
*
*
* description: This file reads in the txt files for ability, knowledge and skills from the ONET website
* it then stacks them together and keeps only the 13 descriptors identified in the 'expert_mapping' to 
* relate to the ASVAB scores.
* It then computes the mean importance score within each occ1990 code, a simple average over the SOC codes that map there.
* Now it is computing the average of the ranks, but should change it to the rank of the average.
* 
*/

clear all
set mem 2g

cd "~/Documents/CurrResearch/Satoshi/workplace/"

/*
* Reads in data from the *.TXT files ability, knowledge and skills from the O*NET
*/

insheet using "onetstata/Ability.TXT", clear

* Take the full ONET SOC code and also the first 2 digits as the stem
rename onetsoccode O_NET_SOC_Code
gen o_net_stem = regexs(0) if(regexm(O_NET_SOC_Code, "[0-9][0-9]-[0-9][0-9][0-9][0-9]"))
merge m:1 o_net_stem using "crosswalk/ONETstem_2_occ1990.dta", generate(_merge_occ1990_A)

save "onetstata/ability.dta", replace

insheet using "onetstata/Knowledge.TXT", clear

rename onetsoccode O_NET_SOC_Code
gen o_net_stem = regexs(0) if(regexm(O_NET_SOC_Code, "[0-9][0-9]-[0-9][0-9][0-9][0-9]"))
merge m:1 o_net_stem using "crosswalk/ONETstem_2_occ1990.dta", generate(_merge_occ1990_K)

save "onetstata/knowledge.dta", replace


insheet using "onetstata/Skills.TXT",clear

rename onetsoccode O_NET_SOC_Code
gen o_net_stem = regexs(0) if(regexm(O_NET_SOC_Code, "[0-9][0-9]-[0-9][0-9][0-9][0-9]"))
merge m:1 o_net_stem using "crosswalk/ONETstem_2_occ1990.dta", generate(_merge_occ1990_S)

save "onetstata/skills.dta", replace

/* note that we don't have these codes in ONET, will have to convert in NLSY
replace occ90 = 4 if occ90 == 3
replace occ90 = 26 if occ90 == 37
replace occ90 = 69 if occ90 == 76
replace occ90 = 347 if occ90 == 346
replace occ90 = 348 if occ90 == 349
replace occ90 = 427 if occ90 == 415
replace occ90 = 448 if occ90 == 454
replace occ90 = 727 if occ90 == 726
replace occ90 = 727 if occ90 == 733 */

** Stack on top of eachother skills, ability and knowledge
append using "onetstata/ability.dta"
append using "onetstata/knowledge.dta"

save "onetstata/ONET_KSA.dta", replace

* keep the elements identified by the expert_mapping:
keep if elementname == "Inductive Reasoning"	| elementname == "Written Comprehension" 	| /*
*/	elementname == "Oral Comprehension"	| elementname == "English Language"		| /*
*/	elementname == "Reading Comprehension"	| elementname == "Deductive Reasoning"		| /*
*/	elementname == "Inductive Reasoning"	| elementname == "Technology Design"		| /*
*/	elementname == "Number Facility"	| elementname == "Mathematical Reasoning"	| /*
*/	elementname == "Mathematics"		| elementname == "Information Ordering"		| /*
*/	elementname == "Science"		| elementname == "Biology"			| /*
*/	elementname == "Chemistry"		| elementname == "Computers and Electronics"	| /*
*/	elementname == "Physics"		| elementname == "Engineering and Technology"	| /*
*/	elementname == "Installation"		| elementname == "Building and Construction"	| /*
*/	elementname == "Troubleshooting"	| elementname == "Operation and Control"	| /*
*/	elementname == "Repairing"		| elementname == "Equipment Maintenance"	| /*
*/	elementname == "Mechanical"		| elementname == "Equipment Selection"		

replace elementname = "Mathematics Knowledge" if elementid == "2.C.4.a"
replace elementname = "Mathematics SKill" if elementid == "2.A.1.e"

drop if scaleid == "LV" /* use only importance, as suggested by ASVAB tech doc below */
replace datavalue = datavalue/5.0 /* rescale to 0-1, not 0-5 */


egen KSA_num = group(elementname)
sort elementname
gen onetsort_n = _n

/* This matrix comes from http://www.asvabprogram.com/downloads/Technical_Chapter_2010.pdf, Table 10 */
matrix expert_mapping = ( /*
*/1.11	,	1.13	,	1.33	,	1.22	,	5.71	,	1.07	,	1	\ /*
*/1.22	,	1.22	,	1.11	,	1.22	,	1.29	,	4.07	,	1.71	\ /*
*/1.22	,	1.33	,	1.11	,	1.11	,	5.29	,	1.43	,	1.29	\ /*
*/1.78	,	2	,	1.56	,	1.56	,	1.79	,	2.57	,	5.29	\ /*
*/4.56	,	4.22	,	2.67	,	3.44	,	5.07	,	4.21	,	3.93	\ /*
*/1.67	,	2.11	,	1.22	,	1.56	,	3.08	,	5.07	,	3.79	\ /*
*/2.22	,	2.89	,	5.67	,	5.78	,	1.79	,	1.57	,	1.43	\ /*
*/1	,	1.33	,	1.11	,	1.22	,	1.43	,	3.43	,	3	\ /*
*/1.56	,	1.22	,	1.33	,	1.22	,	2.14	,	4.5	,	3.36	\ /*
*/3.67	,	4.33	,	3.11	,	4.89	,	4.57	,	3.71	,	3.14	\ /*
*/4.22	,	4.56	,	3.56	,	3.78	,	3.5	,	2.86	,	3.14	\ /*
*/1.22	,	1.11	,	1.44	,	1.22	,	1.64	,	4.71	,	4.29	\ /*
*/5.78	,	5.89	,	1.89	,	2.22	,	3.71	,	3.64	,	2.79	\ /*
*/5.89	,	6	,	1.67	,	1.67	,	3.71	,	3.36	,	2.93	\ /*
*/6	,	6	,	2	,	1.78	,	3.86	,	3.57	,	3.29	\ /*
*/1.11	,	1.67	,	1.11	,	1.11	,	2.43	,	5.57	,	2.5	\ /*
*/5.67	,	5.56	,	1.67	,	2.22	,	3.93	,	3.43	,	2.86	\ /*
*/1.11	,	1.11	,	1.11	,	1.11	,	3.93	,	4.29	,	3.71	\ /*
*/3	,	3.11	,	4.22	,	4.44	,	3.5	,	2.57	,	2.5	\ /*
*/2	,	2.11	,	1.33	,	1.22	,	5.86	,	4.79	,	3.43	\ /*
*/2.44	,	2.56	,	5.78	,	5.67	,	3.07	,	2.85	,	2.71	\ /*
*/1.11	,	1.11	,	1.11	,	1.11	,	1.14	,	3.57	,	3	\ /*
*/3.78	,	4.22	,	1.78	,	2.67	,	5.71	,	4.07	,	3.29	\ /*
*/1.44	,	1.67	,	1.11	,	1.11	,	2.29	,	4.71	,	3.93	\ /*
*/1.56	,	1.44	,	1.56	,	1.44	,	2.5	,	4.36	,	3.93	\ /*
*/4.11	,	3.44	,	6	,	5.89	,	4.21	,	3.07	,	3.29	)
matrix expert_mapping = expert_mapping/6.0  /*I'm not sure why the ASVAB guys make it out of 6 */

/* normalize by rowsum so each ASVAB has equal total weight */
matrix un = J(1,26,1.0)
matrix row_sum = un*expert_mapping
matrix list row_sum
forvalues t=1/7{
	forvalues s=1/26{
		matrix expert_mapping[`s',`t'] = expert_mapping[`s',`t']/row_sum[1,`t']
	}
	quietly gen ONET_ASVAB_`t' = .
}


forvalues s = 1/26{
	sum onetsort_n if KSA_num == `s', meanonly
	local s0 = r(min)
	local sT = r(max)
	forvalues t = 1/7{
		quietly replace ONET_ASVAB_`t' = expert_mapping[`s',`t']*datavalue in `s0'/`sT'
	}
}
sort O_NET_SOC_Code
forvalues t = 1/7{
	quietly by O_NET_SOC_Code: egen tmp_sum = total(ONET_ASVAB_`t')
	quietly replace ONET_ASVAB_`t' = tmp_sum
	drop tmp_sum
}


/* make ranks within each */
forvalues i = 1/7{
	sort ONET_ASVAB_`i'
	quietly gen tmp_n = _n
	quietly gen ONET_rnk_`i' = tmp_n/_N
	drop tmp_n
}

/* Save now have ONET merged with ASVAB and ranks
*/
save "onetstata/ONET_ASVAB.dta", replace

/* 
* Take a simple average across ONET_SOC codes within occ90.  
* Alternatively, we might weight by population, but I don't see how many are in each occupation 
*/
sort occ90
forvalues t = 1/7{
	by occ90 : egen mean90 = mean(ONET_ASVAB_`t')
	quietly replace ONET_ASVAB_`t'= mean90
	drop mean90
	* take the average rank (not rank of the average)
	*** I think we should replace these lines with below, rank of the mean:
	by occ90 : egen mean_rnk90 = mean(ONET_rnk_`t')
	quietly replace ONET_rnk_`t'= mean_rnk90
	drop mean_rnk90
	* alternative is to take rank of the mean:
/* 	sort ONET_ASVAB_`t'
	qui egen tmp_n = group(occ90)
	sum tmp_n, meanonly
	qui replace ONET_rnk_`t' = tmp_n/r(max)
	drop tmp_n
*/
	
}

duplicates drop occ90, force

keep ONET_ASVAB* ONET_rnk* occ90
save "onetstata/ONET_ASVAB_occ90.dta", replace

